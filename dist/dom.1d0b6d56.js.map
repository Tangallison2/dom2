{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","content","firstChild","find","selector","scope","querySelectorAll","style","node","name","value","arguments","length","Object","key","each","nodeList","fn","i","call"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACTC,EAAAA,MADS,kBACFC,MADE,EACK;AACV,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,MAAtB;AACA,WAAOC,SAAS,CAACI,OAAV,CAAkBC,UAAzB;AACF,GALO;AAMTC,EAAAA,IANS,gBAMJC,QANI,EAMKC,KANL,EAMW;AAChB,WAAO,CAACA,KAAK,IAAEP,QAAR,EAAkBQ,gBAAlB,CAAmCF,QAAnC,CAAP;AACC,GARI;AASTG,EAAAA,KATS,iBASHC,IATG,EASEC,IATF,EASOC,KATP,EASa;AACd,QAAGC,SAAS,CAACC,MAAV,KAAmB,CAAtB,EAAwB;AACpB;AACAJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAiBC,KAAjB;AACH,KAHD,MAGM,IAAGC,SAAS,CAACC,MAAV,KAAmB,CAAtB,EAAwB;AAC1B,UAAG,OAAOH,IAAP,KAAe,QAAlB,EAA2B;AACvB;AACA,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACH,OAHD,MAGM,IAAGA,IAAI,YAAYI,MAAnB,EAA0B;AAC5B;AACA,YAAMA,OAAM,GAAEJ,IAAd;;AACA,aAAI,IAAIK,GAAR,IAAeD,OAAf,EAAsB;AAClB;AACA;AACA;AACAL,UAAAA,IAAI,CAACD,KAAL,CAAWO,GAAX,IAAgBD,OAAM,CAACC,GAAD,CAAtB;AACP;AACJ;AACA;AACJ,GA5BI;AA6BLC,EAAAA,IA7BK,gBA6BAC,QA7BA,EA6BSC,EA7BT,EA6BY;AACb,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,QAAQ,CAACJ,MAAvB,EAA8BM,CAAC,EAA/B,EAAkC;AAC9BD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAaH,QAAQ,CAACE,CAAD,CAArB;AACH;AACJ;AAjCI,CAAb","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string){\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string;\r\n        return container.content.firstChild;\r\n     },\r\n    find(selector,scope){\r\n        return (scope||document).querySelectorAll(selector)\r\n        },\r\n    style(node,name,value){\r\n            if(arguments.length===3){\r\n                //dom.style(div,'color','red')增或改属性\r\n                node.style[name]=value\r\n            }else if(arguments.length===2){\r\n                if(typeof name ==='string'){\r\n                    //dom.style(div,'color')查属性\r\n                    return node.style[name]\r\n                }else if(name instanceof Object){\r\n                    //dom.style(div,{color:'red'})增或改属性\r\n                    const Object =name\r\n                    for(let key in Object){\r\n                        //key:border/color\r\n                        //node.style.border=\r\n                        //node.style.color=\r\n                        node.style[key]=Object[key]\r\n                }\r\n            }\r\n            }\r\n        },\r\n        each(nodeList,fn){\r\n            for(let i=0;i<nodeList.length;i++){\r\n                fn.call(null,nodeList[i])\r\n            }\r\n        },\r\n}"]}